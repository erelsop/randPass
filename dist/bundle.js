"use strict";var e=require("crypto"),r=require("fs"),t=require("readline-sync");function o(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var o=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,o.get?o:{enumerable:!0,get:function(){return e[t]}})}})),r.default=e,Object.freeze(r)}var n=o(e),s=o(r),a=o(t);const c="aes-256-gcm",i="./passwords.enc",u=(e,r)=>n.pbkdf2Sync(e,r,1e5,32,"sha256"),f=(e,r)=>{const t=n.randomBytes(16),o=n.createCipheriv(c,r,t);let s=o.update(e,"utf8","hex");s+=o.final("hex");const a=o.getAuthTag().toString("hex");return{iv:t.toString("hex"),encrypted:s,authTag:a}},l=(e,r)=>{const t=n.createDecipheriv(c,r,Buffer.from(e.iv,"hex"));t.setAuthTag(Buffer.from(e.authTag,"hex"));let o=t.update(e.encrypted,"hex","utf8");return o+=t.final("utf8"),o};(()=>{console.log("Welcome to the Secure Password Manager");const e=a.question("Enter your master password: ",{hideEchoBack:!0});let r=(e=>{try{if(!s.existsSync(i))return[];const r=s.readFileSync(i),t=r.subarray(0,16),o=r.subarray(16,32),a=r.subarray(32,48),u=r.subarray(48),f=n.pbkdf2Sync(e,t,1e5,32,"sha256"),l=n.createDecipheriv(c,f,o);l.setAuthTag(a);const d=l.update(u)+l.final("utf8");return JSON.parse(d)}catch(e){return console.log("Failed to decrypt the file. The master password may be incorrect, or the file is corrupted."),[]}})(e);if(null===r)return void console.log("Unable to access your passwords. Exiting...");const t=a.question('Do you want to (a)dd a new password or (r)etrieve an existing one? Enter "a" or "r": ');if("a"===t.toLowerCase()){const t=n.randomBytes(16),o=u(e,t),l=a.question("Enter the user name for the new password: "),d=a.question("Enter the website name for the new password: "),h=(()=>{const e="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+~`|}{[]:;?><,./-=";let r="";for(let t=0;t<12;t++)r+=e[Math.floor(91*Math.random())];return r})(),p=f(l,o),y=f(d,o),g=f(h,o);r.push({userName:p,websiteName:y,password:g,salt:t.toString("hex")}),((e,r)=>{const t=n.randomBytes(16),o=t.toString("hex"),a=u(r,t),f=n.randomBytes(16),l=n.createCipheriv(c,a,f),d=Buffer.concat([l.update(JSON.stringify(e),"utf8"),l.final()]),h=l.getAuthTag();s.writeFileSync(i,Buffer.concat([Buffer.from(o,"hex"),f,h,d]))})(r,e),console.log("New password generated and saved securely.")}else if("r"===t.toLowerCase()){const t=a.question("Enter the user name for the password you want to retrieve: "),o=a.question("Enter the website name for the password you want to retrieve: ");let n;for(const s of r){const r=u(e,Buffer.from(s.salt,"hex"));try{const e=l(s.userName,r),a=l(s.websiteName,r);if(e===t&&a===o){n=s;break}}catch(e){e instanceof Error?console.warn("Error decrypting an entry:",e.message):console.warn("An unknown error occurred during decryption.")}}if(n){const r=l(n.password,u(e,Buffer.from(n.salt,"hex")));console.log(`The password for ${o} is: ${r}`)}else console.log("No matching entry found.")}else console.log("Invalid action selected.")})();
